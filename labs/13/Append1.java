// File: Append1.java // Author: Seth Roller// Date: 4/17/18// Purpose: compares the time required to append n values at the end of the// listsimport java.util.*;  //ArrayList and LinkedListimport java.io.*;    // PrintStreampublic class Append1 {  static PrintStream theScreen = new PrintStream(System.out);  static Scanner theKeyboard = new Scanner(System.in);    public static void main(String args[])    {		HOJTimer theTimer = new HOJTimer();	// create a HOJTimer		theScreen.print("\nAppend Timing Test 1:\n"			+ " Enter the number of values "			+ "you want to append: ");		int n = theKeyboard.nextInt();	// Linked List Based List	                                                    	LinkedList<Integer> aLinkedList = null;	//declare it		aLinkedList = new LinkedList<Integer>();         	     	// build empty linked list	theTimer.start();	// start HOJTimer	for (int i = 0; i < n; i++)	    aLinkedList.add(new Integer(i));	//  to list	theTimer.stop();	// stop HOJTimer		theScreen.println("\nAppending " + n             // display time			  + " values to a LinkedList took : "			  + theTimer.getTime() + " seconds.");			// Array Based List	ArrayList<Integer> anArrayList = null;	// declare it	anArrayList = new ArrayList<Integer>((int) n);	// build empty list	theTimer.start();	// start HOJTimer	for (int i = 0; i < n; i++)	    anArrayList.add(new Integer(i));	//  to list	theTimer.stop();	// stop HOJTimer					theScreen.println("\nAppending " + n              // display time			  + " values to an ArrayList took : "			  + theTimer.getTime() + " seconds.");	theScreen.println();                                                        }    } //end of class